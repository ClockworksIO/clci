name: Create Release PR 
on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - 'CHANGELOG'
      - 'README.md'
      - 'CODE_OF_CONDUCT.md'
      - 'LICENSE'

jobs:
  create_release_pr:
    runs-on: ubuntu-latest
    name: Create a new release PR
    if: "!contains(github.event.head_commit.message, 'chore: new release')"
    steps:
      # first checkout the code
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Install java before installing clojure tools which needs java
      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      # Setup Clojure / Babashka environment
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@10.1
        with:
          # Install just one or all simultaneously
          # The value must indicate a particular version of the tool, or use 'latest'
          # to always provision the latest version
          cli: 1.11.1.1208             # Clojure CLI based on tools.deps
          bb: 1.1.172                  # Babashka
          clj-kondo: 2023.01.20        # Clj-kondo
          cljstyle: 0.15.0             # cljstyle
      # Use caching for fetched dependencies
      - name: Cache clojure dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          # List all files containing dependencies:
          key: cljdeps-${{ hashFiles('deps.edn', 'bb.edn') }}
          restore-keys: cljdeps-
      # Set the version for the release
      - name: Update Version
        id: update-version
        run: bb release --only-update-version --gh-action
        env:
          GITHUB_TOKEN: ${{ github.token }}
      # Add and commit the new version
      - name: Commit Release Changes
        run: |
          git config user.name '7tupel'
          git config user.email '7tupel@users.noreply.github.com'
          git checkout -b release-${{ steps.update-version.outputs.version }}
          git add .
          git commit -m 'release: ${{ steps.update-version.outputs.version }}' --no-verify
          git push origin release-${{ steps.update-version.outputs.version }}
      - name: Create Release PR
        id: create-pull-request 
        uses: devops-infra/action-pull-request@v0.5.5
        with:
          github_token: ${{ github.token }}
          target_branch: 'master'
          source_branch: 'release-${{ steps.update-version.outputs.version }}'
          title: '[RELEASE] Create a new Release'
          body: Auto-generated by the _Create Release PR_ Action
          label: automated pr
          assignee: 7tupel
