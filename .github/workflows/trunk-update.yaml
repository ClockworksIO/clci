name: Trunk Update 
on:
  push:
    branches:
      - 'master'

jobs:
  create_release:
    runs-on: ubuntu-latest
    name: Create a new release based on the new commits
    steps:
      # first checkout the code
      - name: Checkout
        uses: actions/checkout@v3
      # Install java before installing clojure tools which needs java
      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      # Setup Clojure / Babashka environment
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@10.1
        with:
          # Install just one or all simultaneously
          # The value must indicate a particular version of the tool, or use 'latest'
          # to always provision the latest version
          cli: 1.11.1.1208             # Clojure CLI based on tools.deps
          bb: 1.1.172                  # Babashka
          clj-kondo: 2023.01.20        # Clj-kondo
          cljstyle: 0.15.0             # cljstyle
      # Use caching for fetched dependencies
      - name: Cache clojure dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          # List all files containing dependencies:
          key: cljdeps-${{ hashFiles('deps.edn', 'bb.edn') }}
          restore-keys: cljdeps-
      # Run cljstyle to verify the code is formatted correctly
      - name: Format code
        run: bb format --check --silent
      # Run kondo to lint the code
      - name: Lint code
        run: bb lint
      # Run all unit Tests
      - name: Unit Tests
        run: bb test
      # Set the version for the release
      - name: create release
        run: bb release --only-update-version
      # Add and commit the new version
      - uses: EndBug/add-and-commit@v9
        with:
          message: chore: new release
      # Create the actual release
      - name: create release
        run: bb release --only-release