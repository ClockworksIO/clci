name: PR updated
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  perform_checks:
    runs-on: ubuntu-latest
    name: Perform a series of checks on the committed code.
    if: "!contains(github.event.head_commit.message, 'chore: new release')"
    steps:
      # first checkout the code
      - name: Checkout
        uses: actions/checkout@v4
      # Install java before installing clojure tools which needs java
      - name: Prepare java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      # Setup Clojure / Babashka environment
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          # Install just one or all simultaneously
          # The value must indicate a particular version of the tool, or use 'latest'
          # to always provision the latest version
          cli: 1.11.1.1208             # Clojure CLI based on tools.deps
          bb: 1.1.172                  # Babashka
          clj-kondo: 2023.01.20        # Clj-kondo
          cljstyle: 0.15.0             # cljstyle
      # Use caching for fetched dependencies
      - name: Cache clojure dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          # List all files containing dependencies:
          key: cljdeps-${{ hashFiles('deps.edn', 'bb.edn') }}
          restore-keys: cljdeps-
      # Fetch all dependencies
      - name: Fetch Dependencies
        run: clojure -P && bb prepare
      # Run cljstyle to verify the code is formatted correctly
      - name: Format code
        run: bb clci run job format --fix
      # Run kondo to lint the code
      - name: Lint code
        run: bb clci run job lint --fail-level=error
      # Run all unit Tests
      - name: Unit Tests
        run: bb test