name: Create Release
on:
  push:
    branches:
      - master

jobs:
  create_release:
    runs-on: ubuntu-latest
    if: "startsWith(github.event.head_commit.message, 'release')"
    name: Create a new Release
    steps:
      # first checkout the code
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # Install java before installing clojure tools which needs java
      - name: Prepare java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      # Setup Clojure / Babashka environment
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          # Install just one or all simultaneously
          # The value must indicate a particular version of the tool, or use 'latest'
          # to always provision the latest version
          cli: 1.11.1.1208             # Clojure CLI based on tools.deps
          bb: 1.1.172                  # Babashka
          clj-kondo: 2023.01.20        # Clj-kondo
          cljstyle: 0.15.0             # cljstyle
      # Use caching for fetched dependencies
      - name: Cache clojure dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          # List all files containing dependencies:
          key: cljdeps-${{ hashFiles('deps.edn', 'bb.edn') }}
          restore-keys: cljdeps-
      # Create the actual release
      - name: create release
        run: |
          git fetch --all
          git checkout master
          git pull origin master
          bb clci release --release
        env:
          GITHUB_TOKEN: ${{ github.token }}